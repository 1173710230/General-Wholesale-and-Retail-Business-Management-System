<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.example.project.dao.GoodsMapper">

    <resultMap id="goodsMap" type="Goods">
        <id column="goods_id" property="goodsId"/>
        <result column="goods_name" property="goodsName"/>
        <result column="specification" property="goodsSpecification"/>
        <result column="number" property="goodsNumber"/>
        <result property="warehouseId" column="warehouse_id"/>
        <!--                <result column="warehouse_id" property=""-->
    </resultMap>

    <insert id="addGoods" parameterType="Goods">
        insert into goods (goods_name, specification)
        values (#{goodsName}, #{goodsSpecification});
        <selectKey order="AFTER" resultType="int" keyProperty="goodsId">
            select last_insert_id();
        </selectKey>
#         insert into goods_warehouse_relation (goods_id, warehouse_id, number)
#         values (last_insert_id(), #{warehouseId}, #{goodsNumber});
    </insert>

    <insert id="addGoodsWarehouseRelation" parameterType="Goods">
        insert into goods_warehouse_relation (goods_id, warehouse_id, number)
        values (#{goodsId}, #{warehouseId}, #{goodsNumber});
    </insert>

    <delete id="deleteGoodsById" parameterType="int">
        delete
        from goods_warehouse_relation
        where goods_id = #{goodsId}
    </delete>

    <select id="queryGoods" parameterType="Goods" resultMap="goodsMap">
        select g.*, gwr.number number, gwr.warehouse_id
        from goods g,
        goods_warehouse_relation gwr
        <where>
            <!-- 当前版本已经支持多个仓库-->
            <!-- todo 未来改一下where的顺序能够提升速度-->
            gwr.goods_id = g.goods_id
            <if test="goodsId != null and goodsId != 0">
                and g.goods_id = #{goodsId}
            </if>
            <if test="goodsName != null and goodsName != ''">
                and g.goods_name like #{goodsName}
            </if>
            <if test="goodsSpecification != null and goodsSpecification != ''">
                and g.specification like #{goodsSpecification};
            </if>
            <if test="warehouseId != null and warehouseId != 0">
                and warehouse_id = #{warehouseId}
            </if>
        </where>
    </select>

    <select id="queryGoodsInStock" parameterType="Goods" resultMap="goodsMap">
        select g.*, sum(gwr.number) number
        from goods g,
        goods_warehouse_relation gwr
        <where>
            <!-- 当前版本已经不止有一个仓库了，所以去掉了仓库ID=1 的判断，现在计算出来的
            是所有仓库的库存总和-->
            gwr.goods_id = g.goods_id
            <if test="goodsId != null and goodsId != 0">
                and g.goods_id = #{goodsId}
            </if>
            <if test="goodsName != null and goodsName != ''">
                and g.goods_name = #{goodsName}
            </if>
            <if test="goodsSpecification != null and goodsSpecification != ''">
                and g.specification like #{goodsSpecification};
            </if>
        </where>
        group by g.goods_id;
    </select>

    <!--    进货-销售计算库存的方式-->
    <!--    <select id="queryGoods" parameterType="Goods" resultMap="goodsMap">-->
    <!--        set @number = (-->
    <!--            select (sum(iod.import_number) - sum(sod.sell_number))-->
    <!--            from sell_order sod, import_order iod where sod.goods_id = #{goodsId} and iod.goods_id = sod.goods_id-->
    <!--        );-->

    <!--        select g.*, @number number-->
    <!--        from goods g-->
    <!--        <where>-->
    <!--            <if test="goodsId != null and goodsId != 0">-->
    <!--                g.goods_id = #{goodsId}-->
    <!--            </if>-->
    <!--            <if test="goodsName != null and goodsName != ''">-->
    <!--                and g.goods_name = #{goodsName}-->
    <!--            </if>-->
    <!--            <if test="goodsSpecification != null and goodsSpecification != ''">-->
    <!--                and g.specification like #{goodsSpecification};-->
    <!--            </if>-->
    <!--        </where>-->
    <!--    </select>-->

    <update id="updateGoods" parameterType="Goods">
        update goods
        <set>
            <if test="goodsName != null and goodsName != ''">
                goods_name = #{goodsName},
            </if>
            <if test="goodsSpecification != null and goodsSpecification != ''">
                specification = #{goodsSpecification},
            </if>
        </set>
        where goods_id = #{goodsId};
    </update>

    <!--现在支持多仓库-->
    <update id="changeStock" parameterType="Goods">
        update goods_warehouse_relation
        set number = #{newNumber}
        where goods_id = #{goodsId}
          and warehouse_id = #{warehouseId};
    </update>

    <!--现在支持多仓库-->
    <update id="addNumber" parameterType="Goods">
        update goods_warehouse_relation
        set number = number + #{addNumber}
        where goods_id = #{goodsId}
          and warehouse_id = #{warehouseId};
    </update>

    <!--现在支持多仓库-->
    <update id="reduceNumber" parameterType="Goods">
        update goods_warehouse_relation
        set number = number - #{reduceNumber}
        where goods_id = #{goodsId}
          and warehouse_id = #{warehouseId};
    </update>


</mapper>















