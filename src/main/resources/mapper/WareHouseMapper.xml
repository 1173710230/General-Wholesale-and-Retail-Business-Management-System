<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.project.dao.WareHouseMapper">

    <resultMap id="warehouse" type="Warehouse">
        <id column="wh_id" property="warehouseId"/>
        <result column="name" property="name"/>
    </resultMap>

    <select id="getAllWareHouse" resultMap="warehouse">
        SELECT *
        FROM warehouse
    </select>

    <insert id="insert" parameterType="com.example.project.domain.Warehouse">
        INSERT INTO warehouse(wh_id, name)
        VALUES (#{warehouseId}, #{name})
    </insert>

    <insert id="addGoodsToWarehouse" parameterType="Goods">
        insert into goods_warehouse_relation (goods_id, warehouse_id, number)
        values (#{goodsId}, #{warehouseId}, #{goodsNumber});
    </insert>

    <select id="queryWarehouse" resultMap="warehouse">
        select * from warehouse
        <where>
            <if test="warehouseId != null and warehouseId != ''">
                wh_id = #{warehouseId}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
        </where>
    </select>

    <update id="updateWarehouseNameById">
        update warehouse
        set name = #{newName}
        where wh_id = #{id};
    </update>

    <update id="move">
        set @move_goods_id = #{goodsId};
        set @move_number = #{number};
        set @old_wh_id = (select warehouse_id
                          from goods_warehouse_relation
                          where warehouse_id = #{oldWarehouseId}
                            and goods_id = @move_goods_id
                          group by warehouse_id);
        set @new_wh_id = (select warehouse_id
                          from goods_warehouse_relation
                          where warehouse_id = #{newWarehouseId}
                            and goods_id = @move_goods_id
                          group by warehouse_id);

        # 用插入一个不符合类型的东西制造异常，中断修改
        update goods_warehouse_relation
        set number = (
            IF(@old_wh_id is null or @new_wh_id is null, 'f', number - @move_number)
            )
        where warehouse_id = @old_wh_id
          and goods_id = @move_goods_id;
        update goods_warehouse_relation
        set number = (
            IF(@old_wh_id is null or @new_wh_id is null, 'f', number + @move_number)
            )
        where warehouse_id = @new_wh_id
          and goods_id = @move_goods_id;
    </update>


</mapper>