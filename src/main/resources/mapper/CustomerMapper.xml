<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.project.dao.CustomerMapper">

    <resultMap id="customers" type="Customer">
        <id column="customer_id" property="customerId"/>
        <result column="customer_name" property="customerName"/>
        <result column="customer_tel" property="customerTel"/>
        <result column="customer_character" property="status"/>
        <result column="customer_credits" property="customerIntegral"/>
        <result column="customer_deposit" property="preDeposit"/>
    </resultMap>

    <insert id="insertCustomer" parameterType="Customer">
        INSERT INTO customer(customer_name, customer_tel, customer_character)
        VALUES (#{customerName}, #{customerTel}, #{status})
    </insert>

    <select id="getAllCustomers" resultMap="customers">
        SELECT * from customer
    </select>

    <select id="searchByCustomerName" parameterType="String" resultMap="customers">
        SELECT *
        FROM customer
        WHERE customer.customer_name like concat('%', #{customerName}, '%')
    </select>

    <select id="searchById" parameterType="int" resultMap="customers">
        SELECT *
        FROM customer c
        WHERE c.customer_id = #{customerId}
    </select>

    <update id="setNameById">
        UPDATE customer
        SET customer.customer_name = #{customerName}
        WHERE customer.customer_id = #{customerId}
    </update>

    <update id="setTelById">
        UPDATE customer
        SET customer.customer_tel = #{customerTel}
        WHERE customer.customer_id = #{customerId}
    </update>

    <delete id="deleteById" parameterType="Integer">
        DELETE
        FROM customer
        WHERE customer.customer_id = #{customerTel}
    </delete>

    <update id="addCredit">
        update customer
        set customer_credits = #{credit} + customer_credits
        where customer_id = #{customerId}
    </update>

    <update id="reduceCredit">
        update customer
        set customer_credits = customer_credits - #{credit}
        where customer_id = #{customerId}
    </update>

    <select id="getCreditByCustomerId" parameterType="int">
        select customer_credits
        from customer
        where customer_id = #{id}
    </select>

    <update id="addDeposit">
        update customer
        set customer_deposit = #{deposit} + customer_deposit
        where customer_id = #{customerId}
    </update>

    <update id="reduceDeposit">
        update customer
        set customer_deposit = customer_deposit - #{deposit}
        where customer_id = #{customerId}
    </update>

    <select id="getDepositByCustomerId" parameterType="int">
        select customer_deposit
        from customer
        where customer_id = #{id}
    </select>

    <select id="getDebtById" parameterType="int">
        select sum(sog.sum_money)
        from sell_order_group sog,
             customer c
        where sog.customer_id = c.customer_id
          and sog.order_status = 2;
    </select>

</mapper>