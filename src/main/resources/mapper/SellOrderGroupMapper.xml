<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.project.dao.SellOrderGroupMapper">
    <resultMap id="sellOrderGroupMap" type="SellOrderGroup">
        <id column="group_id" property="sellOrderGroupId"/>
        <!--        <result column="group_name" property="groupName"/>-->
        <result column="sell_time" property="sellTime"/>
        <result column="order_status" property="sellStatus"/>
        <result column="remark" property="sellOrderRemark"/>
        <result column="customer_id" property="customerId"/>
        <result column="order_type" property="sellOrderType"/>
        <result column="warehouse_id" property="warehouseId"/>

        <!--总价还有利润-->
        <result column="profit" property="profit"/>
        <result column="sum_money" property="salary"/>

        <collection property="sellOrders" ofType="SellOrder">
            <id column="out_id" property="sellOrderId"/>
            <result column="sell_unit_price" property="sellUnitPrice"/>
            <result column="sell_number" property="sellNumber"/>
            <result column="goods_id" property="sellGoodsId"/>
            <!--            暂时去掉goods的查询，因为Java类修改起来有点麻烦-->
            <!--            <association property="goods" javaType="Goods">-->
            <!--                <id column="goods_id" property="goodsId"/>-->
            <!--                <result column="goods_name" property="goodsName"/>-->
            <!--                <result column="specification" property="goodsSpecification"/>-->
            <!--                <result property="warehouseId" column="warehouse_id"/>-->
            <!--            </association>-->
        </collection>
    </resultMap>


    <insert id="insertSellOrderGroup" parameterType="SellOrderGroup">
        # 先插入一条group记录
        insert into sell_order_group (sell_time, remark, order_type, customer_id, warehouse_id, order_status)
        values (#{sellTime}, #{sellOrderRemark}, #{sellOrderType}, #{customerId}, #{warehouseId}, #{sellStatus});

        set @group_id = last_insert_id();

        # 插入到销售记录 sell_order表中
        insert into sell_order (sell_unit_price, sell_number, goods_id, group_id)
        values
        <foreach collection="sellOrders" item="order" separator=",">
            (#{order.sellUnitPrice}, #{order.sellNumber}, #{order.sellGoodsId}, @group_id)
        </foreach>

        <selectKey resultType="SellOrderGroup" order="AFTER">
            select @group_id;
        </selectKey>

    </insert>

    <update id="updateSellOrderGroup" parameterType="SellOrderGroup">
        update sell_order_group
        <set>
            <if test="sellStatus != null">
                order_status = #{sellStatus},
            </if>
            <if test="sellTime != null and sellTime != ''">
                sell_time = #{sellTime},
            </if>
            <if test="sellOrderRemark != null and sellOrderRemark != ''">
                remark = #{sellOrderRemark},
            </if>
            <if test="customerId != null and customerId != ''">
                customer_id = #{customerId},
            </if>
        </set>
        where group_id = #{sellOrderGroupId};
    </update>

    <select id="querySellOrderGroup" parameterType="SellOrderGroup" resultMap="sellOrderGroupMap">
        select sog.*, so.*, c.*, g.*
        from sell_order_group sog,
        customer c,
        sell_order so,
        goods g,
        warehouse w
        <where>
            so.group_id = sog.group_id
            and c.customer_id = sog.customer_id
            and so.goods_id = g.goods_id
            and w.wh_id = sog.warehouse_id
            <if test="sellOrderGroupId != null">
                and group_id = #{sellOrderGroupId}
            </if>
            <if test="customerId != null">
                and customer_id = #{customerId}
            </if>
            <if test="sellStatus != null">
                and order_status = #{sellStatus}
            </if>
            <if test="sellOrderType != null">
                and order_type = #{sellOrderType}
            </if>
            <if test="sellOrderRemark != null and sellOrderRemark != ''">
                and remark like #{sellOrderRemark}
            </if>
        </where>
    </select>

    <select id="getSellOrderGroupById" parameterType="int" resultMap="sellOrderGroupMap">
        select sog.*, so.*, c.*, g.*
        from sell_order_group sog,
             customer c,
             sell_order so,
             goods g
        where sog.group_id = #{groupId}
          and so.group_id = sog.group_id
          and c.customer_id = sog.customer_id
          and so.goods_id = g.goods_id
    </select>

</mapper>















